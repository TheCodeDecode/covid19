{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","app.js","index.js","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","app.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","chnagebleUrl","console","log","axios","get","fetchDailyData","modifiedData","map","total","date","reportDate","fetchCountries","countries","name","Chart","useState","dailyData","setDailyData","useEffect","fetchAPI","length","barChart","labels","datasets","label","backgroundColor","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","m2","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchdata","setState","this","src","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1461b738.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__8PCH0\",\"card\":\"Cards_card__3UV9Y\",\"infected\":\"Cards_infected__3zhxw\",\"recovered\":\"Cards_recovered__1qJ9o\",\"deaths\":\"Cards_deaths__Nf7TP\"};","import React from \"react\";\r\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\r\nimport styles from \"./Cards.module.css\";\r\nimport CountUp from \"react-countup\";\r\nimport cx from 'classnames';\r\n\r\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n  if (!confirmed) {\r\n    return \"Loading ...\";\r\n  }\r\n  return (\r\n    <div className={styles.container}>\r\n      <Grid container spacing={3} justify=\"center\">\r\n        <Grid item component={Card} xs ={12} md={3} className={cx(styles.card,styles.infected)}>\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Infected\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp\r\n                start={0}\r\n                end={confirmed.value}\r\n                duration={2.5}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {\" \"}\r\n              {new Date(lastUpdate).toDateString()}{\" \"}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              {\" \"}\r\n              Number of Active cases of Covid-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid item component={Card} xs ={12} md={3} className={cx(styles.card,styles.recovered)}>\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Recovered\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp\r\n                start={0}\r\n                end={recovered.value}\r\n                duration={2.5}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {\" \"}\r\n              {new Date(lastUpdate).toDateString()}{\" \"}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              {\" \"}\r\n              Number of recovery cases of Covid-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid item component={Card} xs ={12} md={3} className={cx(styles.card,styles.deaths)}>\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Deaths\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp\r\n                start={0}\r\n                end={deaths.value}\r\n                duration={2.5}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {\" \"}\r\n              {new Date(lastUpdate).toDateString()}{\" \"}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              {\" \"}\r\n              Number of death caused by Covid-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","import axios from \"axios\";\r\n\r\nconst url = \"https://covid19.mathdro.id/api\";\r\n\r\n\r\n\r\n export const fetchData = async (country) => {\r\n  let chnagebleUrl = url;\r\n   if(country){\r\n   chnagebleUrl = `${url}/countries/${country}`;\r\n    console.log(chnagebleUrl,'chnagebleUrl');\r\n   }\r\n  try {\r\n     const {data :{ confirmed,recovered,deaths,lastUpdate}} = await axios.get(chnagebleUrl);\r\n     return { confirmed,recovered,deaths,lastUpdate} ;\r\n      \r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\n\r\nexport const fetchDailyData = async () => {\r\n\r\n  try {\r\n   const {data} = await axios.get(`${url}/daily`);\r\n   const modifiedData = data.map((item) => ({\r\n    confirmed:item.confirmed.total,\r\n    recovered:item.recovered.total,\r\n    date:item.reportDate\r\n\r\n   }));\r\n   console.log(modifiedData,'modifiedData');\r\n   return modifiedData;\r\n     \r\n } catch (error) {}\r\n\r\n};\r\n\r\n\r\nexport const fetchCountries = async () => {\r\n  try{\r\n    const {data : { countries}} = await axios.get(`${url}/countries`);\r\n    return countries.map(item=>item.name);\r\n  }\r\n  catch (error){\r\n\r\n  }\r\n\r\n}\r\n","import { formatMs } from \"@material-ui/core\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { fetchDailyData } from \"../../api/index\";\r\nimport { Line, Bar } from \"react-chartjs-2\";\r\nimport styles from \"./Chart.module.css\";\r\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\r\n\r\nconst Chart = ( {data :{ confirmed, recovered,deaths}, country }) => {\r\n  const [dailyData, setDailyData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setDailyData(await fetchDailyData());\r\n    };\r\n\r\n    fetchAPI();\r\n  }, []);\r\n\r\n  const lineChart = dailyData &&dailyData.length  ? (\r\n    <Line\r\n      data={{\r\n        // labels:dailyData(({date}) => date),\r\n        datasets: [\r\n          {\r\n            data: dailyData.map(({ confirmed }) => confirmed),\r\n            label: \"Infected\",\r\n            borderColor: \"#333ff\",\r\n            fill: true,\r\n          },\r\n          {\r\n            data: dailyData.map(({ deaths }) => deaths),\r\n            label: \"Deaths\",\r\n            borderColor: \"red\",\r\n            backgroundColor: \"rgba(255,0,0,0.5)\",\r\n            fill: true,\r\n          },\r\n        ],\r\n      }}\r\n    />\r\n  ) : (\r\n    \"Error\"\r\n  );\r\n\r\n \r\n    \r\n  const barChart = (\r\n    confirmed ?\r\n    <Grid container spacing={3} justify=\"center\">\r\n    <Grid item component={Card} xs ={12} md={12}>\r\n    <CardContent>\r\n      <Bar\r\n        data={{\r\n          labels: ['Infected', 'Recovered', 'Deaths'],\r\n          datasets: [\r\n            {\r\n              label: 'People',\r\n              backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\r\n              data: [confirmed['value'], recovered['value'],deaths['value']],\r\n            },\r\n          ],\r\n        }}\r\n        options={{\r\n          legend: { display: false },\r\n          title: { display: true, text: `Current state in ${country}` },\r\n        }}\r\n      />\r\n\r\n</CardContent>\r\n        </Grid>\r\n        </Grid>\r\n     : null\r\n  )\r\n  return <div className={styles.container}> {country ? barChart : 'Please Select the Country'}</div>;\r\n};\r\n\r\nexport default Chart;\r\n","\r\nimport React, {useState,useEffect} from 'react';\r\nimport { NativeSelect,FormControl, StylesProvider} from '@material-ui/core';\r\nimport styles from './CountryPicker.module.css'\r\nimport {fetchCountries} from '../../api/index';\r\n\r\nconst CountryPicker = ({handleCountryChange}) =>{\r\n\r\n    const [fetchedCountries,setFetchedCountries] = useState([]);\r\n \r\n    useEffect(() =>{\r\n        const  fetchAPI = async ()=>{\r\n         setFetchedCountries(await fetchCountries());\r\n          \r\n        }\r\n        fetchAPI();\r\n    },[setFetchedCountries])\r\n\r\n\r\n\r\n    return(\r\n<FormControl className={styles.m2}>\r\n    <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n        <option value=\"global\">Global</option>\r\n        {fetchedCountries.map((item,i) => <option key ={i}value={item}>{item}</option>)}\r\n    </NativeSelect>\r\n</FormControl>\r\n        \r\n    )\r\n}\r\n\r\nexport default CountryPicker;","import React from \"react\";\r\nimport { Cards, Chart, CountryPicker } from \"./components\";\r\nimport styles from \"./app.module.css\";\r\nimport {fetchData} from './api/index';\r\n\r\nclass App extends React.Component {\r\n\r\n    state = {\r\n        data : {},\r\n        country:''\r\n    }\r\n\r\n\r\n   async componentDidMount(){\r\n        const fetchdata = await fetchData();\r\n        this.setState({data: fetchdata})\r\n    }\r\n\r\n    handleCountryChange = async (country) =>{\r\n      const fetchdata = await fetchData(country);\r\n      // const fetchData = await fetchData(country);\r\n        console.log(fetchdata);\r\n        this.setState({data: fetchdata,country:country})\r\n      //fetch the data\r\n      //set the state\r\n    }\r\n  render() {\r\n\r\n    const {data,country} = this.state;\r\n    return (\r\n      <div className={styles.container}>\r\n        \r\n        <img src='https://i.ibb.co/7QpKsCX/image.png' className='mt-2'/>\r\n        <Cards  data ={data}/>\r\n        <CountryPicker  handleCountryChange={this.handleCountryChange}/>\r\n        <Chart data={data} country={country} />\r\n       \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './app';\r\n\r\nReactDOM.render(<App/>,document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__3PCi1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"m2\":\"CountryPicker_m2__HWFXu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"app_container__75Pxi\"};"],"sourceRoot":""}