{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","app.js","index.js","components/CountryPicker/CountryPicker.module.css","app.module.css","components/Chart/Chart.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","title","Typography","variant","start","end","value","duration","separator","date","Date","toDateString","clsss","textDescription","url","fetchData","country","a","chnagebleUrl","console","log","axios","get","fetchDailyData","modifiedData","map","total","reportDate","fetchCountries","countries","name","Chart","useState","dailyData","setDailyData","useEffect","fetchAPI","length","barChart","labels","datasets","label","backgroundColor","options","legend","display","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","Select","defaultValue","onChange","e","target","m2","i","MenuItem","key","App","state","fetchdata","setState","this","src","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ab9fa098.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__8PCH0\",\"card\":\"Cards_card__3UV9Y\",\"infected\":\"Cards_infected__3zhxw\",\"recovered\":\"Cards_recovered__1qJ9o\",\"deaths\":\"Cards_deaths__Nf7TP\",\"title\":\"Cards_title__S_MyW\",\"textDescription\":\"Cards_textDescription__uw4jV\",\"date\":\"Cards_date__3u9px\"};","import React from \"react\";\r\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\r\nimport styles from \"./Cards.module.css\";\r\nimport CountUp from \"react-countup\";\r\nimport cx from 'classnames';\r\n\r\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n  if (!confirmed) {\r\n    return 'Loading';\r\n  }\r\n  return (\r\n    <div className={styles.container}>\r\n      <Grid container spacing={3} justify=\"center\">\r\n        <Grid item component={Card} xs ={12} md={3} className={cx(styles.card,styles.infected)}>\r\n          <CardContent>\r\n            <p className={styles.title}>\r\n              Infected\r\n            </p>\r\n            <Typography variant=\"h5\" >\r\n              <CountUp\r\n                start={0}\r\n                end={confirmed.value}\r\n                duration={2.5}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <p className={styles.date}>\r\n              {\" \"}\r\n              {new Date(lastUpdate).toDateString()}{\" \"}\r\n            </p>\r\n            <span clsss={styles.textDescription}>\r\n              {\" \"}\r\n              Number of Active cases of Covid-19\r\n            </span>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid item component={Card} xs ={12} md={3} className={cx(styles.card,styles.recovered)}>\r\n          <CardContent>\r\n          <p className={styles.title}>\r\n              Recovered\r\n            </p>\r\n            <Typography variant=\"h5\">\r\n              <CountUp\r\n                start={0}\r\n                end={recovered.value}\r\n                duration={2.5}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <p className={styles.date}>\r\n              {\" \"}\r\n              {new Date(lastUpdate).toDateString()}{\" \"}\r\n            </p>\r\n            <span clsss={styles.textDescription}>\r\n              {\" \"}\r\n              Number of recovery cases of Covid-19\r\n            </span>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid item component={Card} xs ={12} md={3} className={cx(styles.card,styles.deaths)}>\r\n          <CardContent>\r\n          <p className={styles.title}>\r\n              Deaths\r\n            </p>\r\n            <Typography variant=\"h5\">\r\n              <CountUp\r\n                start={0}\r\n                end={deaths.value}\r\n                duration={2.5}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <p className={styles.date}>\r\n              {\" \"}\r\n              {new Date(lastUpdate).toDateString()}{\" \"}\r\n            </p>\r\n            <span clsss={styles.textDescription}>\r\n              {\" \"}\r\n              Number of death caused by Covid-19\r\n            </span>\r\n          </CardContent>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","import axios from \"axios\";\r\n\r\nconst url = \"https://covid19.mathdro.id/api\";\r\n\r\n\r\n\r\n export const fetchData = async (country) => {\r\n  let chnagebleUrl = url;\r\n   if(country){\r\n   chnagebleUrl = `${url}/countries/${country}`;\r\n    console.log(chnagebleUrl,'chnagebleUrl');\r\n   }\r\n  try {\r\n     const {data :{ confirmed,recovered,deaths,lastUpdate}} = await axios.get(chnagebleUrl);\r\n     return { confirmed,recovered,deaths,lastUpdate} ;\r\n      \r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\n\r\nexport const fetchDailyData = async () => {\r\n\r\n  try {\r\n   const {data} = await axios.get(`${url}/daily`);\r\n   const modifiedData = data.map((item) => ({\r\n    confirmed:item.confirmed.total,\r\n    recovered:item.recovered.total,\r\n    date:item.reportDate\r\n\r\n   }));\r\n   console.log(modifiedData,'modifiedData');\r\n   return modifiedData;\r\n     \r\n } catch (error) {}\r\n\r\n};\r\n\r\n\r\nexport const fetchCountries = async () => {\r\n  try{\r\n    const {data : { countries}} = await axios.get(`${url}/countries`);\r\n    return countries.map(item=>item.name);\r\n  }\r\n  catch (error){\r\n\r\n  }\r\n\r\n}\r\n","import { formatMs } from \"@material-ui/core\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { fetchDailyData } from \"../../api/index\";\r\nimport { Line, Bar } from \"react-chartjs-2\";\r\nimport styles from \"./Chart.module.css\";\r\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\r\n\r\nconst Chart = ( {data :{ confirmed, recovered,deaths}, country }) => {\r\n  const [dailyData, setDailyData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setDailyData(await fetchDailyData());\r\n    };\r\n\r\n    fetchAPI();\r\n  }, []);\r\n\r\n  const lineChart = dailyData &&dailyData.length  ? (\r\n    <Line\r\n      data={{\r\n        // labels:dailyData(({date}) => date),\r\n        datasets: [\r\n          {\r\n            data: dailyData.map(({ confirmed }) => confirmed),\r\n            label: \"Infected\",\r\n            borderColor: \"#333ff\",\r\n            fill: true,\r\n          },\r\n          {\r\n            data: dailyData.map(({ deaths }) => deaths),\r\n            label: \"Deaths\",\r\n            borderColor: \"red\",\r\n            backgroundColor: \"rgba(255,0,0,0.5)\",\r\n            fill: true,\r\n          },\r\n        ],\r\n      }}\r\n    />\r\n  ) : (\r\n    \"Error\"\r\n  );\r\n\r\n \r\n    \r\n  const barChart = (\r\n    confirmed ?\r\n    <Grid container spacing={3} justify=\"center\">\r\n    <Grid item component={Card} xs ={12} md={12}>\r\n    <CardContent>\r\n      <Bar\r\n        data={{\r\n          labels: ['Infected', 'Recovered', 'Deaths'],\r\n          datasets: [\r\n            {\r\n              label: 'People',\r\n              backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\r\n              data: [confirmed['value'], recovered['value'],deaths['value']],\r\n            },\r\n          ],\r\n        }}\r\n        options={{\r\n          legend: { display: false },\r\n          title: { display: true, text: `Current state in ${country}` },\r\n        }}\r\n      />\r\n\r\n</CardContent>\r\n        </Grid>\r\n        </Grid>\r\n     : null\r\n  )\r\n  return <div className={styles.container}> {country ? barChart : 'Please Select the Country'}</div>;\r\n};\r\n\r\nexport default Chart;\r\n","\r\nimport React, {useState,useEffect} from 'react';\r\nimport { NativeSelect,FormControl, StylesProvider} from '@material-ui/core';\r\nimport styles from './CountryPicker.module.css'\r\nimport {fetchCountries} from '../../api/index';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\n\r\n\r\n\r\nconst CountryPicker = ({handleCountryChange}) =>{\r\n\r\n    const [fetchedCountries,setFetchedCountries] = useState([]);\r\n \r\n    useEffect(() =>{\r\n        const  fetchAPI = async ()=>{\r\n         setFetchedCountries(await fetchCountries());\r\n          \r\n        }\r\n        fetchAPI();\r\n    },[setFetchedCountries])\r\n\r\n\r\n\r\n    return(\r\n<FormControl  className={styles.formControl}>\r\n    <Select defaultValue=\"India\" onChange={(e) => handleCountryChange(e.target.value)} className={styles.m2}>\r\n        {fetchedCountries.map((item,i) => <MenuItem  key ={i}value={item}>{item}</MenuItem >)}\r\n    </Select>\r\n</FormControl>\r\n        \r\n    )\r\n}\r\n\r\nexport default CountryPicker;","import React from \"react\";\r\nimport { Cards, Chart, CountryPicker } from \"./components\";\r\nimport styles from \"./app.module.css\";\r\nimport {fetchData} from './api/index';\r\n\r\nclass App extends React.Component {\r\n\r\n    state = {\r\n        data : {},\r\n        country:''\r\n    }\r\n\r\n\r\n   async componentDidMount(){\r\n        const fetchdata = await fetchData();\r\n        this.setState({data: fetchdata})\r\n    }\r\n\r\n    handleCountryChange = async (country) =>{\r\n      const fetchdata = await fetchData(country);\r\n      // const fetchData = await fetchData(country);\r\n        console.log(fetchdata);\r\n        this.setState({data: fetchdata,country:country})\r\n      //fetch the data\r\n      //set the state\r\n    }\r\n  render() {\r\n\r\n    const {data,country} = this.state;\r\n    return (\r\n      <div className={styles.container}>\r\n        \r\n        <img src='https://i.ibb.co/7QpKsCX/image.png' className='mt-2'/>\r\n        <Cards  data ={data}/>\r\n        <CountryPicker  handleCountryChange={this.handleCountryChange}/>\r\n        <Chart data={data} country={country ? country : 'India'} />\r\n       <p className={styles.spacing}> developed by &copy; Akshay Kumar</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './app';\r\n\r\nReactDOM.render(<App/>,document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"m2\":\"CountryPicker_m2__HWFXu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"app_container__75Pxi\",\"spacing\":\"app_spacing__34W25\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__3PCi1\"};"],"sourceRoot":""}